#
# SPDX-License-Identifier: Apache-2.0
#
# Copyright Â© 2018 Peter Skrypalle
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

.bytecode 56.0
.source "nested_try_catch_parse_int.jasm"
.class public final dk/skrypalle/jasm/it/assembler/NestedTryCatchParseInt
.super java/lang/Object

# prints '1\nCannot parse '0xff' to int\n2310\n255\n' to stdout
.method public static main([Ljava/lang/String;)V
  ldc "1"
  invokestatic dk/skrypalle/jasm/it/assembler/NestedTryCatchParseInt.tryCatch:(Ljava/lang/String;)V
  ldc "0xff"
  invokestatic dk/skrypalle/jasm/it/assembler/NestedTryCatchParseInt.tryCatch:(Ljava/lang/String;)V
  ldc "2310"
  invokestatic dk/skrypalle/jasm/it/assembler/NestedTryCatchParseInt.tryCatch:(Ljava/lang/String;)V
  ldc "ff"
  invokestatic dk/skrypalle/jasm/it/assembler/NestedTryCatchParseInt.tryCatch:(Ljava/lang/String;)V
  return
.end method

.method private static tryCatch(Ljava/lang/String;)V
.exception label_0 label_1 label_2 java/lang/NumberFormatException
.exception label_3 label_4 label_5 java/lang/NumberFormatException
label_0:
  getstatic java/lang/System.out:Ljava/io/PrintStream;
  aload 0
  invokestatic java/lang/Integer.parseInt:(Ljava/lang/String;)I
  invokevirtual java/io/PrintStream.println:(I)V
label_1:
  goto label_6
label_2:
  astore 1
label_3:
  getstatic java/lang/System.out:Ljava/io/PrintStream;
  aload 0
  ldc 16
  invokestatic java/lang/Integer.parseInt:(Ljava/lang/String;I)I
  invokevirtual java/io/PrintStream.println:(I)V
label_4:
  goto label_6
label_5:
  astore 2
  getstatic java/lang/System.out:Ljava/io/PrintStream;
  ldc "Cannot parse '%s' to int"
  ldc 1
  anewarray java/lang/Object
  dup
  ldc 0
  aload 0
  aastore
  invokestatic java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
  invokevirtual java/io/PrintStream.println:(Ljava/lang/String;)V
label_6:
  return
.end method
